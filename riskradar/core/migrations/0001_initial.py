# Generated by Django 5.2.1 on 2025-05-31 07:46

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AssetTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('tag_key', models.CharField(blank=True, help_text="Dynamic tag key (e.g. 'owner')", max_length=100, null=True)),
                ('tag_value', models.CharField(blank=True, help_text="Dynamic tag value (e.g. 'alice@example.com')", max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Asset Tag',
                'verbose_name_plural': 'Asset Tags',
                'db_table': 'asset_tag',
            },
        ),
        migrations.CreateModel(
            name='AssetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'asset_type',
            },
        ),
        migrations.CreateModel(
            name='ScannerIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('version', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'scanner_integration',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Vulnerability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('cve_id', models.CharField(blank=True, max_length=50, null=True)),
                ('name', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True)),
                ('severity', models.CharField(choices=[('Info', 'Info'), ('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Critical', 'Critical')], max_length=20)),
                ('cvss_score', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('solution', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'db_table': 'vulnerability',
                'ordering': ['-severity', '-cvss_score'],
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('hostname', models.CharField(blank=True, max_length=255, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.assettype')),
            ],
            options={
                'db_table': 'asset',
                'ordering': ['name'],
                'unique_together': {('name', 'asset_type')},
            },
        ),
        migrations.CreateModel(
            name='BusinessGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('criticality_score', models.IntegerField(default=5, help_text='1-10, where 10 is most critical')),
                ('assets', models.ManyToManyField(blank=True, related_name='business_groups', to='core.asset')),
            ],
            options={
                'db_table': 'business_group',
            },
        ),
        migrations.CreateModel(
            name='Finding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('open', 'Open'), ('fixed', 'Fixed'), ('accepted', 'Risk Accepted'), ('false_positive', 'False Positive')], default='open', max_length=20)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('protocol', models.CharField(blank=True, max_length=20, null=True)),
                ('service', models.CharField(blank=True, max_length=100, null=True)),
                ('plugin_output', models.TextField(blank=True)),
                ('first_seen', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_seen', models.DateTimeField(default=django.utils.timezone.now)),
                ('fixed_at', models.DateTimeField(blank=True, null=True)),
                ('risk_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='findings', to='core.asset')),
                ('vulnerability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='findings', to='core.vulnerability')),
            ],
            options={
                'db_table': 'finding',
                'ordering': ['-risk_score', '-vulnerability__severity'],
                'unique_together': {('asset', 'vulnerability', 'port', 'protocol', 'service')},
            },
        ),
        migrations.CreateModel(
            name='CampaignFinding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='pending', max_length=20)),
                ('finding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.finding')),
            ],
            options={
                'db_table': 'campaign_finding',
            },
        ),
        migrations.CreateModel(
            name='RemediationCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('findings', models.ManyToManyField(related_name='campaigns', through='core.CampaignFinding', to='core.finding')),
            ],
            options={
                'db_table': 'remediation_campaign',
            },
        ),
        migrations.AddField(
            model_name='campaignfinding',
            name='campaign',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.remediationcampaign'),
        ),
        migrations.CreateModel(
            name='ScannerUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255)),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('file_path', models.TextField()),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('stats', models.JSONField(blank=True, default=dict)),
                ('processing_notes', models.TextField(blank=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploads', to='core.scannerintegration')),
            ],
            options={
                'db_table': 'scanner_upload',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='SLAPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_default', models.BooleanField(default=False)),
                ('severity_days', models.JSONField(default=dict, help_text='{"Critical": 1, "High": 7, "Medium": 30, "Low": 90, "Info": 365}')),
                ('business_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sla_policies', to='core.businessgroup')),
            ],
            options={
                'verbose_name': 'SLA Policy',
                'verbose_name_plural': 'SLA Policies',
                'db_table': 'sla_policy',
            },
        ),
        migrations.AlterUniqueTogether(
            name='campaignfinding',
            unique_together={('campaign', 'finding')},
        ),
        migrations.CreateModel(
            name='FieldMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_field', models.CharField(help_text="XML path or field name from scanner (e.g., 'host-ip' or 'ReportItem@pluginID')", max_length=200)),
                ('target_model', models.CharField(choices=[('asset', 'Asset'), ('vulnerability', 'Vulnerability'), ('finding', 'Finding')], max_length=50)),
                ('target_field', models.CharField(help_text="Model field name (e.g., 'ip_address' or 'metadata.os')", max_length=100)),
                ('field_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('decimal', 'Decimal'), ('boolean', 'Boolean'), ('json', 'JSON'), ('datetime', 'DateTime')], default='string', max_length=20)),
                ('is_required', models.BooleanField(default=False)),
                ('default_value', models.TextField(blank=True, help_text='Default value if source field is empty')),
                ('transformation_rule', models.TextField(blank=True, help_text='Python expression for complex transformations')),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='field_mappings', to='core.scannerintegration')),
            ],
            options={
                'db_table': 'field_mapping',
                'ordering': ['integration', 'target_model', 'sort_order'],
                'unique_together': {('integration', 'source_field', 'target_model', 'target_field')},
            },
        ),
        migrations.CreateModel(
            name='SeverityMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_value', models.CharField(help_text='Scanner-specific severity value', max_length=50)),
                ('target_value', models.CharField(choices=[('Info', 'Info'), ('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Critical', 'Critical')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='severity_mappings', to='core.scannerintegration')),
            ],
            options={
                'db_table': 'severity_mapping',
                'ordering': ['integration', 'source_value'],
                'unique_together': {('integration', 'source_value')},
            },
        ),
    ]
